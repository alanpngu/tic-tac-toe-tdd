{"version":3,"sources":["components/Square.js","components/Board.js","utils/calculateWinner.js","components/Reset.js","components/Undo.js","components/Game.js","components/App.js","index.js"],"names":["Square","props","className","onClick","style","backgroundColor","color","value","Board","i","bgColor","this","squares","renderSquare","Component","calculateWinner","lines","length","a","b","c","Reset","Undo","Game","state","initialState","history","Array","fill","xTurn","turnsTaken","setState","slice","concat","turnText","current","winnerFound","name","handleClick","undoTurn","resetToStart","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77f2e9fb.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Square.css'\r\nexport default function Square(props) {\r\n\r\n\r\n    return (\r\n        <button className = 'square' onClick={() => props.onClick()} style = {{backgroundColor: props.color}}>\r\n            {props.value}\r\n        </button>\r\n    )\r\n}","import { render } from '@testing-library/react'\r\nimport Square from './Square'\r\nimport React, {Component} from 'react'\r\nimport './Board.css'\r\n\r\nexport class Board extends Component {\r\n  renderSquare(i) {\r\n    let bgColor;\r\n    if (this.props.squares[i] === 'X') {\r\n      bgColor = 'rgb(210, 4, 45)'\r\n    } else if (this.props.squares[i] === 'O') {\r\n      bgColor = 'rgb(0, 71, 171)'\r\n    } else {\r\n      bgColor = 'rgb(119,149,86)'\r\n    }\r\n    return (\r\n      <Square\r\n        onClick={() => this.props.onClick(i)}\r\n        value = {this.props.squares[i]}\r\n        color = {bgColor}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className = \"board\">\r\n        <div className = 'boardRow'>\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className = 'boardRow'>\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className = 'boardRow'>\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n    </div>       \r\n   );\r\n  }\r\n}\r\n\r\nexport default Board","//Taken from React tic-tac-toe example\r\nexport function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }","import React from 'react'\r\nimport './Reset.css'\r\n\r\nexport default function Reset(props) {\r\n    return (\r\n        <button className = 'resetButton' onClick={() => props.onClick()}>\r\n            {props.value}\r\n            Reset\r\n        </button>\r\n    )\r\n}","import React from 'react'\r\nimport './Undo.css'\r\n\r\nexport default function Undo(props) {\r\n    return (\r\n        <button className = 'undoButton' onClick={() => props.onClick()}>\r\n            {props.value}\r\n            Undo\r\n        </button>\r\n    )\r\n}","import React, {Component} from 'react'\r\nimport Board from './Board'\r\nimport { calculateWinner } from '../utils/calculateWinner'\r\nimport Reset from './Reset'\r\nimport Undo from './Undo'\r\nimport './Game.css'\r\n\r\nexport class Game extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n        }\r\n      ],\r\n      xTurn: true,\r\n      turnsTaken: 0\r\n    }\r\n  }\r\n\r\n  undoTurn() {\r\n    if (this.state.turnsTaken !== 0) {\r\n      this.setState({\r\n        xTurn: !this.state.xTurn,\r\n        turnsTaken: (this.state.turnsTaken - 1)\r\n      })\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  resetToStart() {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.turnsTaken + 1)\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if(calculateWinner(squares) || squares[i]) {\r\n        return;\r\n    }\r\n    squares[i] = this.state.xTurn ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares:squares,\r\n        }\r\n      ]),\r\n      xTurn: !this.state.xTurn,\r\n      turnsTaken: history.length\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.turnsTaken];\r\n    const winnerFound = calculateWinner(current.squares);\r\n    let turnText;\r\n    if (winnerFound) {\r\n      turnText = winnerFound + \" has won the game!\";\r\n    } else if (history.length >= 10) {\r\n      turnText = \"This game is a draw!\";\r\n    } else {\r\n      turnText = this.state.xTurn ? `It is currently X's turn!` : `It is currently O's turn!`\r\n    }\r\n\r\n    return (    \r\n      <div name = \"game\">\r\n        <div className = 'gameBoard'>\r\n          <Board \r\n            squares = {current.squares}\r\n            onClick = {i => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <br>\r\n        </br>\r\n        <div className = 'turnText'>\r\n          {turnText}\r\n        </div>\r\n        <br>\r\n        </br>\r\n        <div className = 'otherButtons'>\r\n          <Undo className = 'undoButton' onClick = {() => this.undoTurn()} />\r\n          <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n          <Reset className = 'resetButton' onClick = {() => this.resetToStart()} />\r\n        </div>    \r\n      </div>   \r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game\r\n","import './App.css';\nimport Game from './Game'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className = 'title'>Tic-Tac-Toed</div>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}